{"ast":null,"code":"import _asyncToGenerator from \"/home/renato/PROJETOS/workana/NovaMaxxVue1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { onMounted, ref } from 'vue';\nimport { collection, onSnapshot, addDoc, doc, getDocs, where, deleteDoc, updateDoc, query, orderBy, limit } from 'firebase/firestore';\nimport { db } from '../../firebase/firebase';\nimport { useMeta } from '@/composables/use-meta';\nimport axios from 'axios';\nexport default {\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    useMeta({\n      title: 'Default Order Sorting Table'\n    }); //const columns = ref(['ID_ITEM','AMBIENTE', 'APLICACAO', 'TIPO', 'NOMENCLATURA','FORNECEDOR','DESCRICAO']);\n\n    var columns = ref(['AMBIENTE', 'TIPO', 'OPCIONAL', 'DESCRICAO', 'valor']);\n    var items = ref([]);\n    var table_option = ref({\n      perPage: 10,\n      perPageValues: [5, 10, 20, 50],\n      skin: 'table table-hover',\n      columnsClasses: {\n        actions: 'actions text-center'\n      },\n      pagination: {\n        nav: 'scroll',\n        chunk: 5\n      },\n      texts: {\n        count: 'Showing {from} to {to} of {count}',\n        filter: '',\n        filterPlaceholder: 'Search...',\n        limit: 'Results:'\n      },\n      sortable: ['ID_ITEM', 'AMBIENTE', 'APLICACAO', 'TIPO', 'NOMENCLATURA', 'FORNECEDOR', 'DESCRICAO'],\n      sortIcon: {\n        base: 'sort-icon-none',\n        up: 'sort-icon-asc',\n        down: 'sort-icon-desc'\n      },\n      resizableColumns: false\n    });\n\n    function getItens() {\n      return _getItens.apply(this, arguments);\n    }\n\n    function _getItens() {\n      _getItens = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get('http://localhost:4040/itens');\n\n              case 2:\n                result = _context.sent;\n                items.value = result.data;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getItens.apply(this, arguments);\n    }\n\n    onMounted(function () {\n      bind_data();\n    });\n\n    var bind_data = function bind_data() {\n      getItens(); //  items.value = [\n      //      { ID_ITEM: 1, ambiente: 'Tiger Nixon', position: 'System Architect', office: 'Edinburgh', age: 61, start_date: '2011/04/25', salary: '320,800' },\n      //      { ID_ITEM: 2, ambiente: 'Garrett Winters', position: 'Accountant', office: 'Tokyo', age: 63, start_date: '2011/07/25', salary: '170,750' }      ];\n    };\n\n    var view_row = function view_row(item) {\n      alert('ID: ' + item.id + ', Name: ' + item.name);\n    };\n\n    var __returned__ = {\n      columns: columns,\n      items: items,\n      table_option: table_option,\n      getItens: getItens,\n      bind_data: bind_data,\n      view_row: view_row,\n      onMounted: onMounted,\n      ref: ref,\n      collection: collection,\n      onSnapshot: onSnapshot,\n      addDoc: addDoc,\n      doc: doc,\n      getDocs: getDocs,\n      where: where,\n      deleteDoc: deleteDoc,\n      updateDoc: updateDoc,\n      query: query,\n      orderBy: orderBy,\n      limit: limit,\n      db: db,\n      useMeta: useMeta,\n      axios: axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";;;;AAuCE,SAASA,SAAT,EAAoBC,GAApB,QAA+B,KAA/B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAkCC,MAAlC,EAA0CC,GAA1C,EAA+CC,OAA/C,EAAuDC,KAAvD,EAA8DC,SAA9D,EAAyEC,SAAzE,EAAoFC,KAApF,EAA2FC,OAA3F,EAAoGC,KAApG,QAAiH,oBAAjH;AACA,SAASC,EAAT,QAAqB,yBAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;IACAD,OAAO,CAAC;MAAEE,KAAK,EAAE;IAAT,CAAD,CAAP,EAIA;;IACA,IAAMC,OAAO,GAAGhB,GAAG,CAAC,CAAC,UAAD,EAAa,MAAb,EAAqB,UAArB,EAAgC,WAAhC,EAA4C,OAA5C,CAAD,CAAnB;IACA,IAAMiB,KAAK,GAAGjB,GAAG,CAAC,EAAD,CAAjB;IAEA,IAAMkB,YAAY,GAAGlB,GAAG,CAAC;MACrBmB,OAAO,EAAE,EADY;MAErBC,aAAa,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAFM;MAGrBC,IAAI,EAAE,mBAHe;MAIrBC,cAAc,EAAE;QAAEC,OAAO,EAAE;MAAX,CAJK;MAKrBC,UAAU,EAAE;QAAEC,GAAG,EAAE,QAAP;QAAiBC,KAAK,EAAE;MAAxB,CALS;MAMrBC,KAAK,EAAE;QACHC,KAAK,EAAE,mCADJ;QAEHC,MAAM,EAAE,EAFL;QAGHC,iBAAiB,EAAE,WAHhB;QAIHnB,KAAK,EAAE;MAJJ,CANc;MAYrBoB,QAAQ,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,WAAxB,EAAqC,MAArC,EAA6C,cAA7C,EAA4D,YAA5D,EAAyE,WAAzE,CAZW;MAarBC,QAAQ,EAAE;QACNC,IAAI,EAAE,gBADA;QAENC,EAAE,EAAE,eAFE;QAGNC,IAAI,EAAE;MAHA,CAbW;MAkBrBC,gBAAgB,EAAE;IAlBG,CAAD,CAAxB;;aAqBaC;;;;;0EAAf;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACyBvB,KAAK,CAACwB,GAAN,CAAU,6BAAV,CADzB;;cAAA;gBACUC,MADV;gBAEItB,KAAK,CAACuB,KAAN,GAAcD,MAAM,CAACE,IAArB;;cAFJ;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;;;IASE1C,SAAS,CAAC,YAAM;MACZ2C,SAAS;IACZ,CAFQ,CAAT;;IAIA,IAAMA,SAAS,GAAG,SAAZA,SAAY,GAAM;MACtBL,QAAQ,GADc,CAEtB;MACA;MACA;IAED,CAND;;IAQA,IAAMM,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;MACvBC,KAAK,CAAC,SAASD,IAAI,CAACE,EAAd,GAAmB,UAAnB,GAAgCF,IAAI,CAACG,IAAtC,CAAL;IACH,CAFD","names":["onMounted","ref","collection","onSnapshot","addDoc","doc","getDocs","where","deleteDoc","updateDoc","query","orderBy","limit","db","useMeta","axios","title","columns","items","table_option","perPage","perPageValues","skin","columnsClasses","actions","pagination","nav","chunk","texts","count","filter","filterPlaceholder","sortable","sortIcon","base","up","down","resizableColumns","getItens","get","result","value","data","bind_data","view_row","item","alert","id","name"],"sources":["/home/renato/PROJETOS/workana/NovaMaxxVue1/src/views/itens/Itens.vue"],"sourcesContent":["<template>\n  <div class=\"layout-px-spacing\">\n      <teleport to=\"#breadcrumb\">\n          <ul class=\"navbar-nav flex-row\">\n              <li>\n                  <div class=\"page-header\">\n                      <nav class=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                          <ol class=\"breadcrumb\">\n                              <li class=\"breadcrumb-item\"><a href=\"javascript:;\">DataTables</a></li>\n                              <li class=\"breadcrumb-item active\" aria-current=\"page\"><span>Itens</span></li>\n                          </ol>\n                      </nav>\n                  </div>\n              </li>\n          </ul>\n      </teleport>\n\n      <div class=\"row layout-top-spacing\">\n          <div class=\"col-xl-12 col-lg-12 col-sm-12 layout-spacing\">\n              <div class=\"panel br-6 p-0\">\n                  <div class=\"custom-table\">\n                      <v-client-table :data=\"items\" :columns=\"columns\" :options=\"table_option\">\n                          <template #actions=\"props\">\n                              <div class=\"actions text-center\">\n                                  <a href=\"javascript:;\" class=\"cancel\" @click=\"view_row(props.row)\">\n                                      <button type=\"button\" class=\"btn btn-primary btn-sm\">View</button>\n                                  </a>\n                              </div>\n                          </template>\n                          <template #salary=\"props\"> ${{ props.row.salary }} </template>\n                      </v-client-table>\n                  </div>\n              </div>\n          </div>\n      </div>\n  </div>\n</template>\n\n<script setup>\n  import { onMounted, ref } from 'vue';\n  import { collection, onSnapshot,  addDoc, doc, getDocs,where, deleteDoc, updateDoc, query, orderBy, limit} from  'firebase/firestore'\n  import { db }   from '../../firebase/firebase'\n  import { useMeta } from '@/composables/use-meta';\n  import axios from 'axios'\n  useMeta({ title: 'Default Order Sorting Table' }); \n\n  \n\n  //const columns = ref(['ID_ITEM','AMBIENTE', 'APLICACAO', 'TIPO', 'NOMENCLATURA','FORNECEDOR','DESCRICAO']);\n  const columns = ref(['AMBIENTE', 'TIPO', 'OPCIONAL','DESCRICAO','valor']);\n  const items = ref([]);\n \n  const table_option = ref({\n      perPage: 10,\n      perPageValues: [5, 10, 20, 50],\n      skin: 'table table-hover',\n      columnsClasses: { actions: 'actions text-center' },\n      pagination: { nav: 'scroll', chunk: 5 },\n      texts: {\n          count: 'Showing {from} to {to} of {count}',\n          filter: '',\n          filterPlaceholder: 'Search...',\n          limit: 'Results:',\n      },\n      sortable: ['ID_ITEM', 'AMBIENTE', 'APLICACAO', 'TIPO', 'NOMENCLATURA','FORNECEDOR','DESCRICAO'],\n      sortIcon: {\n          base: 'sort-icon-none',\n          up: 'sort-icon-asc',\n          down: 'sort-icon-desc',\n      },\n      resizableColumns: false,\n  });\n\nasync function getItens() {\n    const result = await axios.get('http://localhost:4040/itens')\n    items.value = result.data\n}\n\n \n\n \n\n  onMounted(() => {\n      bind_data();   \n  });\n\n  const bind_data = () => {\n    getItens()\n    //  items.value = [\n    //      { ID_ITEM: 1, ambiente: 'Tiger Nixon', position: 'System Architect', office: 'Edinburgh', age: 61, start_date: '2011/04/25', salary: '320,800' },\n    //      { ID_ITEM: 2, ambiente: 'Garrett Winters', position: 'Accountant', office: 'Tokyo', age: 63, start_date: '2011/07/25', salary: '170,750' }      ];\n     \n  };\n\n  const view_row = (item) => {\n      alert('ID: ' + item.id + ', Name: ' + item.name);\n  };\n</script>\n"]},"metadata":{},"sourceType":"module"}