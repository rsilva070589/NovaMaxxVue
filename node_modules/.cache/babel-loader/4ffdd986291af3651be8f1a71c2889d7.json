{"ast":null,"code":"import _asyncToGenerator from \"/home/renato/PROJETOS/workana/NovaMaxxVue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.object.define-property.js\";\nimport { ref } from 'vue';\nimport '@/assets/sass/scrollspyNav.scss';\nimport '@/assets/sass/components/custom-sweetalert.scss';\nimport highlight from '@/components/plugins/highlight.vue';\nimport { useMeta } from '@/composables/use-meta';\nexport default {\n  setup: function setup(__props, _ref) {\n    var expose = _ref.expose;\n    expose();\n    useMeta({\n      title: 'Sweet Alert'\n    });\n    var code_arr = ref([]);\n\n    var toggleCode = function toggleCode(name) {\n      if (code_arr.value.includes(name)) {\n        code_arr.value = code_arr.value.filter(function (d) {\n          return d != name;\n        });\n      } else {\n        code_arr.value.push(name);\n      }\n    };\n\n    var showAlert = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(type) {\n        var ipAPI, steps, swalQueueStep, values, currentStep, result, timerInterval, swalWithBootstrapButtons, toast;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(type === 1)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                new window.Swal({\n                  title: 'Saved succesfully',\n                  padding: '2em'\n                });\n                _context.next = 42;\n                break;\n\n              case 4:\n                if (!(type === 2)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                new window.Swal({\n                  icon: 'success',\n                  title: 'Good job!',\n                  text: 'You clicked the!',\n                  padding: '2em'\n                });\n                _context.next = 42;\n                break;\n\n              case 8:\n                if (!(type === 3)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                ipAPI = 'https://api.ipify.org?format=json';\n                new window.Swal({\n                  title: 'Your public IP',\n                  confirmButtonText: 'Show my public IP',\n                  text: 'Your public IP will be received ' + 'via AJAX request',\n                  showLoaderOnConfirm: true,\n                  preConfirm: function preConfirm() {\n                    return fetch(ipAPI).then(function (response) {\n                      return response.json();\n                    }).then(function (data) {\n                      new window.Swal({\n                        title: data.ip\n                      });\n                    })[\"catch\"](function () {\n                      new window.Swal({\n                        type: 'error',\n                        title: 'Unable to get your public IP'\n                      });\n                    });\n                  }\n                });\n                _context.next = 42;\n                break;\n\n              case 13:\n                if (!(type === 4)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                new window.Swal({\n                  icon: 'question',\n                  title: 'The Internet?',\n                  text: 'That thing is still around?',\n                  padding: '2em'\n                });\n                _context.next = 42;\n                break;\n\n              case 17:\n                if (!(type === 5)) {\n                  _context.next = 41;\n                  break;\n                }\n\n                steps = ['1', '2', '3'];\n                swalQueueStep = window.Swal.mixin({\n                  confirmButtonText: 'Next â†’',\n                  showCancelButton: true,\n                  progressSteps: steps,\n                  input: 'text',\n                  inputAttributes: {\n                    required: true\n                  },\n                  validationMessage: 'This field is required',\n                  padding: '2em'\n                });\n                values = [];\n                currentStep = 0;\n\n              case 22:\n                if (!(currentStep < steps.length)) {\n                  _context.next = 38;\n                  break;\n                }\n\n                _context.next = 25;\n                return swalQueueStep.fire({\n                  title: \"Question \".concat(steps[currentStep]),\n                  text: currentStep == 0 ? 'Chaining swal2 modals is easy.' : '',\n                  inputValue: values[currentStep],\n                  showCancelButton: currentStep > 0,\n                  currentProgressStep: currentStep\n                });\n\n              case 25:\n                result = _context.sent;\n\n                if (!result.value) {\n                  _context.next = 31;\n                  break;\n                }\n\n                values[currentStep] = result.value;\n                currentStep++;\n                _context.next = 36;\n                break;\n\n              case 31:\n                if (!(result.dismiss === new window.Swal.DismissReason.cancel())) {\n                  _context.next = 35;\n                  break;\n                }\n\n                currentStep--;\n                _context.next = 36;\n                break;\n\n              case 35:\n                return _context.abrupt(\"break\", 38);\n\n              case 36:\n                _context.next = 22;\n                break;\n\n              case 38:\n                if (currentStep === steps.length) {\n                  window.Swal.fire({\n                    title: 'All done!',\n                    padding: '2em',\n                    html: 'Your answers: <pre>' + JSON.stringify(values) + '</pre>',\n                    confirmButtonText: 'Lovely!'\n                  });\n                }\n\n                _context.next = 42;\n                break;\n\n              case 41:\n                if (type === 6) {\n                  new window.Swal({\n                    title: 'Custom animation with Animate.css',\n                    animation: false,\n                    customClass: 'animated tada',\n                    padding: '2em'\n                  });\n                } else if (type === 7) {\n                  new window.Swal({\n                    title: 'Auto close alert!',\n                    html: 'I will close in <b></b> milliseconds.',\n                    timer: 2000,\n                    timerProgressBar: true,\n                    didOpen: function didOpen() {\n                      window.Swal.showLoading();\n                      var b = window.Swal.getHtmlContainer().querySelector('b');\n                      timerInterval = setInterval(function () {\n                        b.textContent = window.Swal.getTimerLeft();\n                      }, 100);\n                    },\n                    willClose: function willClose() {\n                      clearInterval(timerInterval);\n                    }\n                  }).then(function (result) {\n                    if (result.dismiss === window.Swal.DismissReason.timer) {\n                      console.log('I was closed by the timer');\n                    }\n                  });\n                } else if (type === 8) {\n                  new window.Swal({\n                    title: 'Sweet!',\n                    text: 'Modal with a custom image.',\n                    imageUrl: require('@/assets/images/thumbs-up.jpg'),\n                    imageWidth: 224,\n                    imageHeight: 200,\n                    imageAlt: 'Custom image',\n                    animation: false,\n                    padding: '2em'\n                  });\n                } else if (type === 9) {\n                  new window.Swal({\n                    icon: 'info',\n                    title: '<i>HTML</i> <u>example</u>',\n                    html: 'You can use <b>bold text</b>, ' + '<a href=\"//github.com\">links</a> ' + 'and other HTML tags',\n                    showCloseButton: true,\n                    showCancelButton: true,\n                    focusConfirm: false,\n                    confirmButtonText: '<i class=\"flaticon-checked-1\"></i> Great!',\n                    confirmButtonAriaLabel: 'Thumbs up, great!',\n                    cancelButtonText: '<i class=\"flaticon-cancel-circle\"></i> Cancel',\n                    cancelButtonAriaLabel: 'Thumbs down',\n                    padding: '2em'\n                  });\n                } else if (type === 10) {\n                  new window.Swal({\n                    icon: 'warning',\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    showCancelButton: true,\n                    confirmButtonText: 'Delete',\n                    padding: '2em'\n                  }).then(function (result) {\n                    if (result.value) {\n                      new window.Swal('Deleted!', 'Your file has been deleted.', 'success');\n                    }\n                  });\n                } else if (type === 11) {\n                  swalWithBootstrapButtons = window.Swal.mixin({\n                    confirmButtonClass: 'btn btn-secondary',\n                    cancelButtonClass: 'btn btn-dark me-3',\n                    buttonsStyling: false\n                  });\n                  swalWithBootstrapButtons.fire({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonText: 'Yes, delete it!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    padding: '2em'\n                  }).then(function (result) {\n                    if (result.value) {\n                      swalWithBootstrapButtons.fire('Deleted!', 'Your file has been deleted.', 'success');\n                    } else if (result.dismiss === window.Swal.DismissReason.cancel) {\n                      swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\n                    }\n                  });\n                } else if (type === 12) {\n                  new window.Swal({\n                    title: 'Custom width, padding, background.',\n                    width: 600,\n                    padding: '7em',\n                    customClass: 'background-modal',\n                    background: '#fff url(' + require('@/assets/images/sweet-bg.jpg') + ') no-repeat 100% 100%'\n                  });\n                } else if (type === 13) {\n                  new window.Swal({\n                    icon: 'error',\n                    title: 'Oops...',\n                    text: 'Something went wrong!',\n                    footer: '<a href>Why do I have this issue?</a>',\n                    padding: '2em'\n                  });\n                } else if (type === 14) {\n                  new window.Swal({\n                    title: 'Ù‡Ù„ ØªØ±ÙŠØ¯ Ø§Ù„Ø§Ø³ØªÙ…Ø±Ø§Ø±ØŸ',\n                    confirmButtonText: 'Ù†Ø¹Ù…',\n                    cancelButtonText: 'Ù„Ø§',\n                    showCancelButton: true,\n                    showCloseButton: true,\n                    padding: '2em',\n                    target: document.getElementById('rtl-container')\n                  });\n                } else if (type === 15) {\n                  toast = window.Swal.mixin({\n                    toast: true,\n                    position: 'top-end',\n                    showConfirmButton: false,\n                    timer: 3000,\n                    padding: '2em'\n                  });\n                  toast.fire({\n                    icon: 'success',\n                    title: 'Signed in successfully',\n                    padding: '2em'\n                  });\n                }\n\n              case 42:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function showAlert(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var __returned__ = {\n      code_arr: code_arr,\n      toggleCode: toggleCode,\n      showAlert: showAlert,\n      ref: ref,\n      highlight: highlight,\n      useMeta: useMeta\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","highlight","useMeta","title","code_arr","toggleCode","name","value","includes","filter","d","push","showAlert","type","window","Swal","padding","icon","text","ipAPI","confirmButtonText","showLoaderOnConfirm","preConfirm","fetch","then","response","json","data","ip","steps","swalQueueStep","mixin","showCancelButton","progressSteps","input","inputAttributes","required","validationMessage","values","currentStep","length","fire","inputValue","currentProgressStep","result","dismiss","DismissReason","cancel","html","JSON","stringify","animation","customClass","timer","timerProgressBar","didOpen","showLoading","b","getHtmlContainer","querySelector","timerInterval","setInterval","textContent","getTimerLeft","willClose","clearInterval","console","log","imageUrl","require","imageWidth","imageHeight","imageAlt","showCloseButton","focusConfirm","confirmButtonAriaLabel","cancelButtonText","cancelButtonAriaLabel","swalWithBootstrapButtons","confirmButtonClass","cancelButtonClass","buttonsStyling","reverseButtons","width","background","footer","target","document","getElementById","toast","position","showConfirmButton"],"sources":["/home/renato/PROJETOS/workana/NovaMaxxVue/src/views/components/sweetalert.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <teleport to=\"#breadcrumb\">\n            <ul class=\"navbar-nav flex-row\">\n                <li>\n                    <div class=\"page-header\">\n                        <nav class=\"breadcrumb-one\" aria-label=\"breadcrumb\">\n                            <ol class=\"breadcrumb\">\n                                <li class=\"breadcrumb-item\"><a href=\"javascript:;\">Components</a></li>\n                                <li class=\"breadcrumb-item active\" aria-current=\"page\"><span>Sweet Alerts</span></li>\n                            </ol>\n                        </nav>\n                    </div>\n                </li>\n            </ul>\n        </teleport>\n\n        <div class=\"container\">\n            <div id=\"navSection\" class=\"nav sidenav\">\n                <div class=\"sidenav-content\" v-scroll-spy-active v-scroll-spy-link>\n                    <a href=\"#sweetalertbasic\" class=\"nav-link\">Basic</a>\n                    <a href=\"#sweetalertmessage\" class=\"nav-link\">Message</a>\n                    <a href=\"#sweetalertdynamic\" class=\"nav-link\">Dynamic</a>\n                    <a href=\"#sweetalertatitlewithtext\" class=\"nav-link\">A title with text</a>\n                    <a href=\"#sweetalertchainingmodals\" class=\"nav-link\">Chaining modals</a>\n                    <a href=\"#sweetalertanimation\" class=\"nav-link\">Animation</a>\n                    <a href=\"#sweetalertautoclosetimer\" class=\"nav-link\">Auto close timer</a>\n                    <a href=\"#sweetalertcustomimage\" class=\"nav-link\">Custom image</a>\n                    <a href=\"#sweetalertcustomhtml\" class=\"nav-link\">Custom HTML</a>\n                    <a href=\"#sweetalertwarningmessage\" class=\"nav-link\">Warning message</a>\n                    <a href=\"#sweetalertcancel\" class=\"nav-link\">Cancel</a>\n                    <a href=\"#sweetalertcustomstyle\" class=\"nav-link\">Custom Style</a>\n                    <a href=\"#sweetalertfooter\" class=\"nav-link\">Footer</a>\n                    <a href=\"#sweetalertrtl\" class=\"nav-link\">RTL</a>\n                    <a href=\"#sweetalertmixin\" class=\"nav-link\">Mixin</a>\n                </div>\n            </div>\n            <div class=\"row layout-top-spacing\">\n                <div class=\"col-12\">\n                    <div class=\"alert alert-arrow-left alert-icon-left alert-light-info mb-0 text-break\">\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            class=\"feather feather-bell\"\n                        >\n                            <path d=\"M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9\"></path>\n                            <path d=\"M13.73 21a2 2 0 0 1-3.46 0\"></path>\n                        </svg>\n                        Documentation:\n                        <a target=\"_blank\" href=\"https://www.npmjs.com/package/vue-sweetalert2\" class=\"text-info\"> https://www.npmjs.com/package/vue-sweetalert2 </a>\n                    </div>\n                </div>\n            </div>\n            <div v-scroll-spy class=\"row layout-top-spacing\">\n                <div id=\"sweetalertbasic\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Basic message</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(1)\">Basic message</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code1')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code1')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(1)&quot;&gt;Basic message&lt;/button&gt;\n\n new window.Swal({\n    title: 'Saved succesfully',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertmessage\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Success message</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(2)\">Success message!</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code2')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code2')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(2)&quot;&gt;Success message!&lt;/button&gt;\n\nnew window.Swal({\n    icon: 'success',\n    title: 'Good job!',\n    text: 'You clicked the!',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertdynamic\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Dynamic queue</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(3)\">Dynamic queue</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code3')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code3')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(3)&quot;&gt;Dynamic queue&lt;/button&gt;\n\nconst ipAPI = 'https://api.ipify.org?format=json';\nnew window.Swal({\n    title: 'Your public IP',\n    confirmButtonText: 'Show my public IP',\n    text: 'Your public IP will be received ' + 'via AJAX request',\n    showLoaderOnConfirm: true,\n    preConfirm: () =&gt; {\n        return fetch(ipAPI)\n            .then(response =&gt; {\n                return response.json();\n            })\n            .then(data =&gt; {\n                new window.Swal({\n                    title: data.ip\n                });\n            })\n            .catch(() =&gt; {\n                new window.Swal({\n                    type: 'error',\n                    title: 'Unable to get your public IP'\n                });\n            });\n    }\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertatitlewithtext\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>A title with a text under</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(4)\">Title & text</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code4')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code4')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(4)&quot;&gt;Title &amp; text&lt;/button&gt;\n\nnew window.Swal({\n    icon: 'question',\n    title: 'The Internet?',\n    text: 'That thing is still around?',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertchainingmodals\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Chaining modals (queue)</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(5)\">Chaining modals (queue)</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code5')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code5')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(5)&quot;&gt;Chaining modals (queue)&lt;/button&gt;\n\nconst steps = ['1', '2', '3'];\nconst swalQueueStep =  window.Swal.mixin({\n    confirmButtonText: 'Next &rarr;',\n    showCancelButton: true,\n    progressSteps: steps,\n    input: 'text',\n    inputAttributes: {\n        required: true\n    },\n    validationMessage: 'This field is required',\n    padding: '2em'\n});\n\nconst values = [];\nlet currentStep;\n\nfor (currentStep = 0; currentStep &lt; steps.length; ) {\n    const result = await swalQueueStep.fire({\n        title: `Question ${steps[currentStep]}`,\n        text: currentStep == 0 ? 'Chaining swal2 modals is easy.' : '',\n        inputValue: values[currentStep],\n        showCancelButton: currentStep &gt; 0,\n        currentProgressStep: currentStep\n    });\n\n    if (result.value) {\n        values[currentStep] = result.value;\n        currentStep++;\n    } else if (result.dismiss === new window.Swal.DismissReason.cancel) {\n        currentStep--;\n    } else {\n        break;\n    }\n}\n\nif (currentStep === steps.length) {\n    new window.Swal.fire({\n        title: 'All done!',\n        padding: '2em',\n        html: 'Your answers: &lt;pre&gt;' + JSON.stringify(values) + '&lt;/pre&gt;',\n        confirmButtonText: 'Lovely!'\n    });\n}\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertanimation\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Custom animation</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(6)\">Custom animation</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code6')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code6')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(6)&quot;&gt;Custom animation&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Custom animation with Animate.css',\n    animation: false,\n    customClass: 'animated tada',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertautoclosetimer\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Message with auto close timer</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(7)\">Message timer</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code7')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code7')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(7)&quot;&gt;Message timer&lt;/button&gt;\n\nlet timerInterval;\n\nnew window.Swal({\n    title: 'Auto close alert!',\n    html: 'I will close in &lt;b&gt;&lt;/b&gt; milliseconds.',\n    timer: 2000,\n    timerProgressBar: true,\n    didOpen: () =&gt; {\n        new window.Swal.showLoading();\n        const b = new window.Swal.getHtmlContainer().querySelector('b');\n        timerInterval = setInterval(() =&gt; {\n            b.textContent = new window.Swal.getTimerLeft();\n        }, 100);\n    },\n    willClose: () =&gt; {\n        clearInterval(timerInterval);\n    }\n}).then((result)=> {\n    if (result.dismiss === new window.Swal.DismissReason.timer) {\n        console.log('I was closed by the timer');\n    }\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcustomimage\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Message with custom image</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(8)\">Message with custom image</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code8')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code8')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(8)&quot;&gt;Message with custom image&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Sweet!',\n    text: 'Modal with a custom image.',\n    imageUrl: require('@/assets/images/thumbs-up.jpg'),\n    imageWidth: 224,\n    imageHeight: 200,\n    imageAlt: 'Custom image',\n    animation: false,\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcustomhtml\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Custom HTML description and buttons</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(9)\">Custom Description & buttons</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code9')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code9')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(9)&quot;&gt;Custom Description &amp; buttons&lt;/button&gt;\n\nnew window.Swal({\n    icon: 'info',\n    title: '&lt;i&gt;HTML&lt;/i&gt; &lt;u&gt;example&lt;/u&gt;',\n    html: 'You can use &lt;b&gt;bold text&lt;/b&gt;, ' + '&lt;a href=&quot;//github.com&quot;&gt;links&lt;/a&gt; ' + 'and other HTML tags',\n    showCloseButton: true,\n    showCancelButton: true,\n    focusConfirm: false,\n    confirmButtonText: '&lt;i class=&quot;flaticon-checked-1&quot;&gt;&lt;/i&gt; Great!',\n    confirmButtonAriaLabel: 'Thumbs up, great!',\n    cancelButtonText: '&lt;i class=&quot;flaticon-cancel-circle&quot;&gt;&lt;/i&gt; Cancel',\n    cancelButtonAriaLabel: 'Thumbs down',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertwarningmessage\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Warning message, with \"Confirm\" button</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(10)\">Confirm</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code10')\"><span>Confirm</span></button>\n\n                                <div v-if=\"code_arr.includes('code10')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(10)&quot;&gt;Confirm&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Are you sure?',\n    text: &quot;You won't be able to revert this!&quot;,\n    type: 'warning',\n    showCancelButton: true,\n    confirmButtonText: 'Delete',\n    padding: '2em'\n}).then(result =&gt; {\n    if (result.value) {\n        new window.Swal('Deleted!', 'Your file has been deleted.', 'success');\n    }\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcancel\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Execute something else for \"Cancel\".</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(11)\">Addition else for \"Cancel\".</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code11')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code11')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(11)&quot;&gt;Addition else for &quot;Cancel&quot;.&lt;/button&gt;\n\nconst swalWithBootstrapButtons =  window.Swal.mixin({\n    confirmButtonClass: 'btn btn-secondary',\n    cancelButtonClass: 'btn btn-dark me-3',\n    buttonsStyling: false\n});\nswalWithBootstrapButtons\n    .fire({\n        title: 'Are you sure?',\n        text: &quot;You won't be able to revert this!&quot;,\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes, delete it!',\n        cancelButtonText: 'No, cancel!',\n        reverseButtons: true,\n        padding: '2em'\n    })\n    .then(result =&gt; {\n        if (result.value) {\n            swalWithBootstrapButtons.fire('Deleted!', 'Your file has been deleted.', 'success');\n        } else if (result.dismiss === new window.Swal.DismissReason.cancel) {\n            swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\n        }\n    });\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertcustomstyle\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>A message with custom width, padding and background</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(12)\">Custom Message</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code12')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code12')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(12)&quot;&gt;Custom Message&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Custom width, padding, background.',\n    width: 600,\n    padding: '7em',\n    customClass: 'background-modal',\n    background: '#fff url(' + require('@/assets/images/sweet-bg.jpg') + ') no-repeat 100% 100%'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertfooter\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>With Footer</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(13)\">With Footer</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code13')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code13')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(13)&quot;&gt;With Footer&lt;/button&gt;\n\nnew window.Swal({\n    type: 'error',\n    title: 'Oops...',\n    text: 'Something went wrong!',\n    footer: '&lt;a href&gt;Why do I have this issue?&lt;/a&gt;',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertrtl\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>RTL Support</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(14)\">RTL</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code14')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code14')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(14)&quot;&gt;RTL&lt;/button&gt;\n\nnew window.Swal({\n    title: 'Ù‡Ù„ ØªØ±ÙŠØ¯ Ø§Ù„Ø§Ø³ØªÙ…Ø±Ø§Ø±ØŸ',\n    confirmButtonText: 'Ù†Ø¹Ù…',\n    cancelButtonText: 'Ù„Ø§',\n    showCancelButton: true,\n    showCloseButton: true,\n    padding: '2em',\n    target: document.getElementById('rtl-container')\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div id=\"sweetalertmixin\" class=\"col-lg-12 col-12 layout-spacing\">\n                    <div class=\"statbox panel box box-shadow\">\n                        <div class=\"panel-heading\">\n                            <div class=\"row\">\n                                <div class=\"col-xl-12 col-md-12 col-sm-12 col-12\">\n                                    <h4>Mixin</h4>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-body text-center\">\n                            <button type=\"button\" class=\"btn btn-primary me-2 btn\" @click=\"showAlert(15)\">Mixin</button>\n                            <div class=\"code-section-container show-code\">\n                                <button class=\"btn btn-default toggle-code-snippet\" @click=\"toggleCode('code15')\"><span>Code</span></button>\n\n                                <div v-if=\"code_arr.includes('code15')\" class=\"code-section text-start\">\n                                    <highlight>\n                                        <pre>\n&lt;button variant=&quot;primary&quot; class=&quot;me-2 btn&quot; @click=&quot;showAlert(15)&quot;&gt;Mixin&lt;/button&gt;\n\nconst toast =  window.Swal.mixin({\n    toast: true,\n    position: 'top-end',\n    showConfirmButton: false,\n    timer: 3000,\n    padding: '2em'\n});\ntoast.fire({\n    icon: 'success',\n    title: 'Signed in successfully',\n    padding: '2em'\n});\n                                        </pre>\n                                    </highlight>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\n    import { ref } from 'vue';\n    import '@/assets/sass/scrollspyNav.scss';\n    import '@/assets/sass/components/custom-sweetalert.scss';\n    import highlight from '@/components/plugins/highlight.vue';\n\n    import { useMeta } from '@/composables/use-meta';\n    useMeta({ title: 'Sweet Alert' });\n\n    const code_arr = ref([]);\n    const toggleCode = (name) => {\n        if (code_arr.value.includes(name)) {\n            code_arr.value = code_arr.value.filter((d) => d != name);\n        } else {\n            code_arr.value.push(name);\n        }\n    };\n\n    const showAlert = async (type) => {\n        if (type === 1) {\n            new window.Swal({\n                title: 'Saved succesfully',\n                padding: '2em',\n            });\n        } else if (type === 2) {\n            new window.Swal({\n                icon: 'success',\n                title: 'Good job!',\n                text: 'You clicked the!',\n                padding: '2em',\n            });\n        } else if (type === 3) {\n            const ipAPI = 'https://api.ipify.org?format=json';\n            new window.Swal({\n                title: 'Your public IP',\n                confirmButtonText: 'Show my public IP',\n                text: 'Your public IP will be received ' + 'via AJAX request',\n                showLoaderOnConfirm: true,\n                preConfirm: () => {\n                    return fetch(ipAPI)\n                        .then((response) => {\n                            return response.json();\n                        })\n                        .then((data) => {\n                            new window.Swal({\n                                title: data.ip,\n                            });\n                        })\n                        .catch(() => {\n                            new window.Swal({\n                                type: 'error',\n                                title: 'Unable to get your public IP',\n                            });\n                        });\n                },\n            });\n        } else if (type === 4) {\n            new window.Swal({\n                icon: 'question',\n                title: 'The Internet?',\n                text: 'That thing is still around?',\n                padding: '2em',\n            });\n        } else if (type === 5) {\n            const steps = ['1', '2', '3'];\n            const swalQueueStep = window.Swal.mixin({\n                confirmButtonText: 'Next â†’',\n                showCancelButton: true,\n                progressSteps: steps,\n                input: 'text',\n                inputAttributes: {\n                    required: true,\n                },\n                validationMessage: 'This field is required',\n                padding: '2em',\n            });\n\n            const values = [];\n            let currentStep;\n\n            for (currentStep = 0; currentStep < steps.length; ) {\n                const result = await swalQueueStep.fire({\n                    title: `Question ${steps[currentStep]}`,\n                    text: currentStep == 0 ? 'Chaining swal2 modals is easy.' : '',\n                    inputValue: values[currentStep],\n                    showCancelButton: currentStep > 0,\n                    currentProgressStep: currentStep,\n                });\n\n                if (result.value) {\n                    values[currentStep] = result.value;\n                    currentStep++;\n                } else if (result.dismiss === new window.Swal.DismissReason.cancel()) {\n                    currentStep--;\n                } else {\n                    break;\n                }\n            }\n\n            if (currentStep === steps.length) {\n                window.Swal.fire({\n                    title: 'All done!',\n                    padding: '2em',\n                    html: 'Your answers: <pre>' + JSON.stringify(values) + '</pre>',\n                    confirmButtonText: 'Lovely!',\n                });\n            }\n        } else if (type === 6) {\n            new window.Swal({\n                title: 'Custom animation with Animate.css',\n                animation: false,\n                customClass: 'animated tada',\n                padding: '2em',\n            });\n        } else if (type === 7) {\n            let timerInterval;\n\n            new window.Swal({\n                title: 'Auto close alert!',\n                html: 'I will close in <b></b> milliseconds.',\n                timer: 2000,\n                timerProgressBar: true,\n                didOpen: () => {\n                    window.Swal.showLoading();\n                    const b = window.Swal.getHtmlContainer().querySelector('b');\n                    timerInterval = setInterval(() => {\n                        b.textContent = window.Swal.getTimerLeft();\n                    }, 100);\n                },\n                willClose: () => {\n                    clearInterval(timerInterval);\n                },\n            }).then((result) => {\n                if (result.dismiss === window.Swal.DismissReason.timer) {\n                    console.log('I was closed by the timer');\n                }\n            });\n        } else if (type === 8) {\n            new window.Swal({\n                title: 'Sweet!',\n                text: 'Modal with a custom image.',\n                imageUrl: require('@/assets/images/thumbs-up.jpg'),\n                imageWidth: 224,\n                imageHeight: 200,\n                imageAlt: 'Custom image',\n                animation: false,\n                padding: '2em',\n            });\n        } else if (type === 9) {\n            new window.Swal({\n                icon: 'info',\n                title: '<i>HTML</i> <u>example</u>',\n                html: 'You can use <b>bold text</b>, ' + '<a href=\"//github.com\">links</a> ' + 'and other HTML tags',\n                showCloseButton: true,\n                showCancelButton: true,\n                focusConfirm: false,\n                confirmButtonText: '<i class=\"flaticon-checked-1\"></i> Great!',\n                confirmButtonAriaLabel: 'Thumbs up, great!',\n                cancelButtonText: '<i class=\"flaticon-cancel-circle\"></i> Cancel',\n                cancelButtonAriaLabel: 'Thumbs down',\n                padding: '2em',\n            });\n        } else if (type === 10) {\n            new window.Swal({\n                icon: 'warning',\n                title: 'Are you sure?',\n                text: \"You won't be able to revert this!\",\n                showCancelButton: true,\n                confirmButtonText: 'Delete',\n                padding: '2em',\n            }).then((result) => {\n                if (result.value) {\n                    new window.Swal('Deleted!', 'Your file has been deleted.', 'success');\n                }\n            });\n        } else if (type === 11) {\n            const swalWithBootstrapButtons = window.Swal.mixin({\n                confirmButtonClass: 'btn btn-secondary',\n                cancelButtonClass: 'btn btn-dark me-3',\n                buttonsStyling: false,\n            });\n            swalWithBootstrapButtons\n                .fire({\n                    title: 'Are you sure?',\n                    text: \"You won't be able to revert this!\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonText: 'Yes, delete it!',\n                    cancelButtonText: 'No, cancel!',\n                    reverseButtons: true,\n                    padding: '2em',\n                })\n                .then((result) => {\n                    if (result.value) {\n                        swalWithBootstrapButtons.fire('Deleted!', 'Your file has been deleted.', 'success');\n                    } else if (result.dismiss === window.Swal.DismissReason.cancel) {\n                        swalWithBootstrapButtons.fire('Cancelled', 'Your imaginary file is safe :)', 'error');\n                    }\n                });\n        } else if (type === 12) {\n            new window.Swal({\n                title: 'Custom width, padding, background.',\n                width: 600,\n                padding: '7em',\n                customClass: 'background-modal',\n                background: '#fff url(' + require('@/assets/images/sweet-bg.jpg') + ') no-repeat 100% 100%',\n            });\n        } else if (type === 13) {\n            new window.Swal({\n                icon: 'error',\n                title: 'Oops...',\n                text: 'Something went wrong!',\n                footer: '<a href>Why do I have this issue?</a>',\n                padding: '2em',\n            });\n        } else if (type === 14) {\n            new window.Swal({\n                title: 'Ù‡Ù„ ØªØ±ÙŠØ¯ Ø§Ù„Ø§Ø³ØªÙ…Ø±Ø§Ø±ØŸ',\n                confirmButtonText: 'Ù†Ø¹Ù…',\n                cancelButtonText: 'Ù„Ø§',\n                showCancelButton: true,\n                showCloseButton: true,\n                padding: '2em',\n                target: document.getElementById('rtl-container'),\n            });\n        } else if (type === 15) {\n            const toast = window.Swal.mixin({\n                toast: true,\n                position: 'top-end',\n                showConfirmButton: false,\n                timer: 3000,\n                padding: '2em',\n            });\n            toast.fire({\n                icon: 'success',\n                title: 'Signed in successfully',\n                padding: '2em',\n            });\n        }\n    };\n</script>\n"]},"metadata":{},"sourceType":"module"}